<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="XrPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEAAAAAAAD/4QA+RXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAAKAAAALAAAAABVTklDT0RFAAAq//4ABCoA/+IL+ElDQ19QUk9GSUxFAAEBAAAL6AAAAAACAAAA
        bW50clJHQiBYWVogB9kAAwAbABUAJAAfYWNzcAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAPbW
        AAEAAAAA0y0AAAAAKfg93q/yVa54QvrkyoM5DQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ
        ZGVzYwAAAUQAAAB5YlhZWgAAAcAAAAAUYlRSQwAAAdQAAAgMZG1kZAAACeAAAACIZ1hZWgAACmgAAAAU
        Z1RSQwAAAdQAAAgMbHVtaQAACnwAAAAUbWVhcwAACpAAAAAkYmtwdAAACrQAAAAUclhZWgAACsgAAAAU
        clRSQwAAAdQAAAgMdGVjaAAACtwAAAAMdnVlZAAACugAAACHd3RwdAAAC3AAAAAUY3BydAAAC4QAAAA3
        Y2hhZAAAC7wAAAAsZGVzYwAAAAAAAAAfc1JHQiBJRUM2MTk2Ni0yLTEgYmxhY2sgc2NhbGVkAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAAAkoAAAD4QAALbPY3VydgAAAAAAAAQAAAAABQAKAA8AFAAZ
        AB4AIwAoAC0AMgA3ADsAQABFAEoATwBUAFkAXgBjAGgAbQByAHcAfACBAIYAiwCQAJUAmgCfAKQAqQCu
        ALIAtwC8AMEAxgDLANAA1QDbAOAA5QDrAPAA9gD7AQEBBwENARMBGQEfASUBKwEyATgBPgFFAUwBUgFZ
        AWABZwFuAXUBfAGDAYsBkgGaAaEBqQGxAbkBwQHJAdEB2QHhAekB8gH6AgMCDAIUAh0CJgIvAjgCQQJL
        AlQCXQJnAnECegKEAo4CmAKiAqwCtgLBAssC1QLgAusC9QMAAwsDFgMhAy0DOANDA08DWgNmA3IDfgOK
        A5YDogOuA7oDxwPTA+AD7AP5BAYEEwQgBC0EOwRIBFUEYwRxBH4EjASaBKgEtgTEBNME4QTwBP4FDQUc
        BSsFOgVJBVgFZwV3BYYFlgWmBbUFxQXVBeUF9gYGBhYGJwY3BkgGWQZqBnsGjAadBq8GwAbRBuMG9QcH
        BxkHKwc9B08HYQd0B4YHmQesB78H0gflB/gICwgfCDIIRghaCG4IggiWCKoIvgjSCOcI+wkQCSUJOglP
        CWQJeQmPCaQJugnPCeUJ+woRCicKPQpUCmoKgQqYCq4KxQrcCvMLCwsiCzkLUQtpC4ALmAuwC8gL4Qv5
        DBIMKgxDDFwMdQyODKcMwAzZDPMNDQ0mDUANWg10DY4NqQ3DDd4N+A4TDi4OSQ5kDn8Omw62DtIO7g8J
        DyUPQQ9eD3oPlg+zD88P7BAJECYQQxBhEH4QmxC5ENcQ9RETETERTxFtEYwRqhHJEegSBxImEkUSZBKE
        EqMSwxLjEwMTIxNDE2MTgxOkE8UT5RQGFCcUSRRqFIsUrRTOFPAVEhU0FVYVeBWbFb0V4BYDFiYWSRZs
        Fo8WshbWFvoXHRdBF2UXiReuF9IX9xgbGEAYZRiKGK8Y1Rj6GSAZRRlrGZEZtxndGgQaKhpRGncanhrF
        GuwbFBs7G2MbihuyG9ocAhwqHFIcexyjHMwc9R0eHUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8THz4faR+U
        H78f6iAVIEEgbCCYIMQg8CEcIUghdSGhIc4h+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRNJHwkqyTa
        JQklOCVoJZclxyX3JicmVyaHJrcm6CcYJ0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoCKjUqaCqb
        Ks8rAis2K2krnSvRLAUsOSxuLKIs1y0MLUEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1MGwwpDDb
        MRIxSjGCMbox8jIqMmMymzLUMw0zRjN/M7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2rjbpNyQ3YDec
        N9c4FDhQOIw4yDkFOUI5fzm8Ofk6Njp0OrI67zstO2s7qjvoPCc8ZTykPOM9Ij1hPaE94D4gPmA+oD7g
        PyE/YT+iP+JAI0BkQKZA50EpQWpBrEHuQjBCckK1QvdDOkN9Q8BEA0RHRIpEzkUSRVVFmkXeRiJGZ0ar
        RvBHNUd7R8BIBUhLSJFI10kdSWNJqUnwSjdKfUrESwxLU0uaS+JMKkxyTLpNAk1KTZNN3E4lTm5Ot08A
        T0lPk0/dUCdQcVC7UQZRUFGbUeZSMVJ8UsdTE1NfU6pT9lRCVI9U21UoVXVVwlYPVlxWqVb3V0RXklfg
        WC9YfVjLWRpZaVm4WgdaVlqmWvVbRVuVW+VcNVyGXNZdJ114XcleGl5sXr1fD19hX7NgBWBXYKpg/GFP
        YaJh9WJJYpxi8GNDY5dj62RAZJRk6WU9ZZJl52Y9ZpJm6Gc9Z5Nn6Wg/aJZo7GlDaZpp8WpIap9q92tP
        a6dr/2xXbK9tCG1gbbluEm5rbsRvHm94b9FwK3CGcOBxOnGVcfByS3KmcwFzXXO4dBR0cHTMdSh1hXXh
        dj52m3b4d1Z3s3gReG54zHkqeYl553pGeqV7BHtje8J8IXyBfOF9QX2hfgF+Yn7CfyN/hH/lgEeAqIEK
        gWuBzYIwgpKC9INXg7qEHYSAhOOFR4Wrhg6GcobXhzuHn4gEiGmIzokziZmJ/opkisqLMIuWi/yMY4zK
        jTGNmI3/jmaOzo82j56QBpBukNaRP5GokhGSepLjk02TtpQglIqU9JVflcmWNJaflwqXdZfgmEyYuJkk
        mZCZ/JpomtWbQpuvnByciZz3nWSd0p5Anq6fHZ+Ln/qgaaDYoUehtqImopajBqN2o+akVqTHpTilqaYa
        poum/adup+CoUqjEqTepqaocqo+rAqt1q+msXKzQrUStuK4trqGvFq+LsACwdbDqsWCx1rJLssKzOLOu
        tCW0nLUTtYq2AbZ5tvC3aLfguFm40blKucK6O7q1uy67p7whvJu9Fb2Pvgq+hL7/v3q/9cBwwOzBZ8Hj
        wl/C28NYw9TEUcTOxUvFyMZGxsPHQce/yD3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83z7jQOdC6
        0TzRvtI/0sHTRNPG1EnUy9VO1dHWVdbY11zX4Nhk2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i3ynfr+A2
        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
</value>
  </data>
</root>