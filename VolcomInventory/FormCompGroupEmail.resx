<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="LargeImageCollection.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v15.1" name="DevExpress.Utils.v15.1, Version=15.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="LargeImageCollection.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v15.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxNS4xLCBWZXJzaW9uPTE1LjEu
        Ny4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABgAAAAYAAAACQUAAAAP
        BQAAAOUOAAACKQMAAIlQTkcNChoKAAAADUlIRFIAAAAYAAAAGAgGAAAA4Hc9+AAAAARnQU1BAACxjwv8
        YQUAAALgSURBVEhLtZTtS1NhGMZn9mov2Jc0zaEDmVKCgZGQkopgqAwtyhAkifoQRF/8FmRuO+pq1qFE
        slhtZRQhZkpBTvema05nrkzLinyhD31c/8HdfZ+XdTafjY3ogt9hPOe6r+t5HsZRxVP72yMViLXLUb56
        Z0oHD2dbBHq9J8HkrFyld0ixZE9cOJSLuPp8jfD661WYXDeDY0UP4yvtYdxrJrB/56DffxYM9mMumpHG
        4wuNDd3O8tDQ0mV4860NXiw2w9OFBibPFk7Bq+VLMPKlDXo8NSGalWLYQkNFt/M4DC5egIGPDWCZr0wI
        a7AGBpfOwy3PCaAMKU4UAAjQEY0TR0NPPpyG+3Nl0BcoSRpbUAdmdzWd5O91KQqG+2aq4O5MMfD+wg0M
        fj6HNlHzvx4zPUR/oBo6xkqtUrxYIOzeUYSGg2D25TKJFssjogHOeZiuSjwFeqmA73RrwOTNikm0WB4Z
        yqJMtEkFYyWurqkMiEe0WB4llIk2sUA/UQicOyOCXn+JEJSIRpevbJinTJRcoAW9IxPZFyZZKWcNjpzI
        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
</value>
  </data>
</root>